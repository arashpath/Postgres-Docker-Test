version: "3.1"

networks: 
    pg_net:

volumes: 
    pgmaster:
    pgslave1:
    backup:

secrets:
    pg_passwd:
        file: ./pg_pass.txt

    
services:

    pgmaster:
        build:
            context: .
            dockerfile: Postgres.Dockerfile
        image: pd_postgres
        environment:
            NODE_ID: 1 # Integer number of node (not required if can be extracted from NODE_NAME var, e.g. node-45 => 1045)
            NODE_NAME: node1 # Node name
            CLUSTER_NODE_NETWORK_NAME: pgmaster # (default: hostname of the node)
            
            PARTNER_NODES: "pgmaster,pgslave1"
            REPLICATION_PRIMARY_HOST: pgmaster # That should be ignored on the same node
            
            NODE_PRIORITY: 100  # (default: 100)
            SSH_ENABLE: 1
            #database we want to use for application
            POSTGRES_PASSWORD: monkey_pass
            POSTGRES_USER: monkey_user
            POSTGRES_DB: monkey_db
            CLEAN_OVER_REWIND: 0
            CONFIGS_DELIMITER_SYMBOL: ;
            CONFIGS: "listen_addresses:'*';max_replication_slots:5"
                                  # in format variable1:value1[,variable2:value2[,...]] if CONFIGS_DELIMITER_SYMBOL=, and CONFIGS_ASSIGNMENT_SYMBOL=:
                                  # used for pgpool.conf file
            #defaults:
            CLUSTER_NAME: pg_pg_net # default is pg_pg_net
            REPLICATION_DB: replication_db # default is replication_db
            REPLICATION_USER: replication_user # default is replication_user
            REPLICATION_PASSWORD: replication_pass # default is replication_pass
            
        ports:
            - 5433:5432
        volumes:
            - pgmaster:/var/lib/postgresql/data
            - ./ssh/:/home/postgres/.ssh/keys
        networks:
            pg_net:

    pgslave1:
        build:
            context: .
            dockerfile: Postgres.Dockerfile
        image: pd_postgres
        environment:
            NODE_ID: 2
            NODE_NAME: node2
            CLUSTER_NODE_NETWORK_NAME: pgslave1 # (default: hostname of the node)
            SSH_ENABLE: 1
            PARTNER_NODES: "pgmaster,pgslave1"
            REPLICATION_PRIMARY_HOST: pgmaster
            CLEAN_OVER_REWIND: 1
            CONFIGS_DELIMITER_SYMBOL: ;
            CONFIGS: "max_replication_slots:10" #some overrides
        ports:
            - 5434:5432
        volumes:
            - pgslave1:/var/lib/postgresql/data
            - ./ssh:/home/postgres/.ssh/keys
        networks:
            pg_net:
        depends_on: 
            - pgmaster

    backup:
        build:
            context: .
            dockerfile: Barman.Dockerfile
        image: pd_barman
        environment:
            REPLICATION_USER: replication_user # default is replication_user
            REPLICATION_PASSWORD: replication_pass # default is replication_pass
            REPLICATION_HOST: pgmaster
            POSTGRES_PASSWORD: monkey_pass
            POSTGRES_USER: monkey_user
            POSTGRES_DB: monkey_db
            SSH_ENABLE: 1
            BACKUP_SCHEDULE: "*/30 */5 * * *"
        volumes:
            - backup:/var/backups
            - ./ssh:/home/postgres/.ssh/keys
        networks:
            pg_net:

    pgpool:
        build:
            context: .
            dockerfile: Pgpool.Dockerfile
        image: pd_pgpool
        environment:
            PCP_USER: pcp_user
            PCP_PASSWORD: pcp_pass
            WAIT_BACKEND_TIMEOUT: 60

            CHECK_USER: monkey_user
            CHECK_PASSWORD: monkey_pass
            CHECK_PGCONNECT_TIMEOUT: 3 #timout for checking if primary node is healthy
            SSH_ENABLE: 1
            DB_USERS: monkey_user:monkey_pass # in format user:password[,user:password[...]]
            BACKENDS: "0:pgmaster:5432:1:/var/lib/postgresql/data:ALLOW_TO_FAILOVER,1:pgslave1::::" #,4:pgslaveDOES_NOT_EXIST::::
                      # in format num:host:port:weight:data_directory:flag[,...]
                      # defaults:
                      #   port: 5432
                      #   weight: 1
                      #   data_directory: /var/lib/postgresql/data
                      #   flag: ALLOW_TO_FAILOVER
            REQUIRE_MIN_BACKENDS: 2 # minimal number of backends to start pgpool (some might be unreachable)
            CONFIGS: "num_init_children:250,max_pool:4"
                      # in format variable1:value1[,variable2:value2[,...]] if CONFIGS_DELIMITER_SYMBOL=, and CONFIGS_ASSIGNMENT_SYMBOL=:
                      # used for pgpool.conf file
        ports:
            - 5432:5432
            - 9898:9898 # PCP
        volumes:
            - ./ssh:/home/postgres/.ssh/keys
        networks:
            pg_net:
        depends_on: 
            - pgmaster
            - pgslave1
            
    visulizer:
        image: dockersamples/visualizer:stable
        ports: 
          - "8080:8080"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
        deploy:
          placement:
            constraints: [node.role == manager]
        networks: 
            pg_net:
    
    pgadmin:
        image: dpage/pgadmin4
        environment: 
            PGADMIN_DEFAULT_EMAIL: admin@monkey.com
            PGADMIN_DEFAULT_PASSWORD: monkey_pass
        ports: 
            - "80:80"
        volumes: 
            - "./servers.json:/pgadmin4/servers.json"
        secrets:
            - pg_passwd
        networks: 
            pg_net: